//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FootballLeague2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class mydatabaseEntities1 : DbContext
    {
        public mydatabaseEntities1()
            : base("name=mydatabaseEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public DbSet<Account> Accounts { get; set; }
        public DbSet<Customer> Customers { get; set; }
        public DbSet<Department> Departments { get; set; }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<FootballLeague> FootballLeagues { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<OrderItem> OrderItems { get; set; }
        public DbSet<Orderr> Orderrs { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<User> Users { get; set; }
    
        public virtual int SpFootballLeague(Nullable<int> matchId, string teamName1, string teamName2, string status, string winningTeam, Nullable<int> points)
        {
            var matchIdParameter = matchId.HasValue ?
                new ObjectParameter("MatchId", matchId) :
                new ObjectParameter("MatchId", typeof(int));
    
            var teamName1Parameter = teamName1 != null ?
                new ObjectParameter("TeamName1", teamName1) :
                new ObjectParameter("TeamName1", typeof(string));
    
            var teamName2Parameter = teamName2 != null ?
                new ObjectParameter("TeamName2", teamName2) :
                new ObjectParameter("TeamName2", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var winningTeamParameter = winningTeam != null ?
                new ObjectParameter("WinningTeam", winningTeam) :
                new ObjectParameter("WinningTeam", typeof(string));
    
            var pointsParameter = points.HasValue ?
                new ObjectParameter("Points", points) :
                new ObjectParameter("Points", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpFootballLeague", matchIdParameter, teamName1Parameter, teamName2Parameter, statusParameter, winningTeamParameter, pointsParameter);
        }
    }
}
